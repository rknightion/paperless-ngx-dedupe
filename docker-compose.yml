services:
  # PostgreSQL database
  postgres:
    image: postgres:17
    container_name: paperless-dedupe-postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-paperless_dedupe}
      - POSTGRES_USER=${POSTGRES_USER:-paperless_dedupe}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Required in production
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-paperless_dedupe} -d ${POSTGRES_DB:-paperless_dedupe}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery task queue
  redis:
    image: redis:7-alpine
    container_name: paperless-dedupe-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API service
  paperless-dedupe:
    image: ghcr.io/rknightion/paperless-ngx-dedupe:latest
    container_name: paperless-dedupe
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "30001:8000"
    environment:
      # Database configuration - PostgreSQL database
      - PAPERLESS_DEDUPE_DATABASE_URL=postgresql://${POSTGRES_USER:-paperless_dedupe}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-paperless_dedupe}
      # Redis URL for Celery
      - PAPERLESS_DEDUPE_REDIS_URL=redis://redis:6379/0
      # Paperless-NGX connection (configure via web UI or set here)
      # - PAPERLESS_DEDUPE_PAPERLESS_URL=http://your-paperless:8000
      # - PAPERLESS_DEDUPE_PAPERLESS_API_TOKEN=your-api-token

      # Security - IMPORTANT: Change this in production!
      - PAPERLESS_DEDUPE_SECRET_KEY=${SECRET_KEY:-change-me-in-production-use-a-long-random-string}

      # Logging level (optional) - default is WARNING
      # Uncomment and set to DEBUG or INFO for more verbose logging
      # - PAPERLESS_DEDUPE_LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker service
  worker:
    image: ghcr.io/rknightion/paperless-ngx-dedupe:latest
    container_name: paperless-dedupe-worker
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      paperless-dedupe:
        condition: service_started # Wait for main app to run migrations
    environment:
      - PAPERLESS_DEDUPE_DATABASE_URL=postgresql://${POSTGRES_USER:-paperless_dedupe}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-paperless_dedupe}
      - PAPERLESS_DEDUPE_REDIS_URL=redis://redis:6379/0
      - DOCKER_CONTAINER=1 # Tell worker it's running in Docker
      # Copy Paperless-NGX connection settings from main service
      # - PAPERLESS_DEDUPE_PAPERLESS_URL=http://your-paperless:8000
      # - PAPERLESS_DEDUPE_PAPERLESS_API_TOKEN=your-api-token
      - PAPERLESS_DEDUPE_LOG_LEVEL=${PAPERLESS_DEDUPE_LOG_LEVEL:-INFO}
    restart: unless-stopped
    # Wait for the main app to run migrations, then start worker
    command: >
      sh -c "sleep 10 && celery -A paperless_dedupe.worker.celery_app worker
      --loglevel=info
      --concurrency=4
      --queues=high_priority,default,low_priority,deduplication,sync"

  # Frontend web UI service
  frontend:
    image: ghcr.io/rknightion/paperless-ngx-dedupe-frontend:latest
    container_name: paperless-dedupe-frontend
    ports:
      - "30002:3000"
    depends_on:
      - paperless-dedupe
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Optional: Flower for monitoring Celery tasks (uncomment to enable)
  # flower:
  #   image: ghcr.io/rknightion/paperless-ngx-dedupe:latest
  #   container_name: paperless-dedupe-flower
  #   depends_on:
  #     - redis
  #   environment:
  #     - PAPERLESS_DEDUPE_REDIS_URL=redis://redis:6379/0
  #     - FLOWER_PORT=5555
  #     - FLOWER_BASIC_AUTH=admin:changeme  # IMPORTANT: Change credentials!
  #   ports:
  #     - "5555:5555"
  #   restart: unless-stopped
  #   command: >
  #     celery -A paperless_dedupe.worker.celery_app flower
  #     --port=5555
  #     --broker=redis://redis:6379/0

volumes:
  postgres_data:
  redis_data:
