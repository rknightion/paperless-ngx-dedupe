"""Initial schema with component scores

Revision ID: cf393bce516c
Revises:
Create Date: 2025-08-26 20:46:11.507332

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cf393bce516c"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "app_config",
        sa.Column("key", sa.String(length=100), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("paperless_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=True),
        sa.Column("fingerprint", sa.String(length=64), nullable=True),
        sa.Column("minhash_signature", sa.LargeBinary(), nullable=True),
        sa.Column("content_hash", sa.String(length=64), nullable=True),
        sa.Column("ocr_confidence", sa.Float(), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("last_processed", sa.DateTime(), nullable=True),
        sa.Column("processing_status", sa.String(length=20), nullable=True),
        sa.Column("correspondent", sa.String(length=200), nullable=True),
        sa.Column("document_type", sa.String(length=200), nullable=True),
        sa.Column("tags", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("archive_filename", sa.String(length=500), nullable=True),
        sa.Column("original_filename", sa.String(length=500), nullable=True),
        sa.Column("added_date", sa.DateTime(), nullable=True),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_documents_fingerprint"), "documents", ["fingerprint"], unique=True
    )
    op.create_index(op.f("ix_documents_id"), "documents", ["id"], unique=False)
    op.create_index(
        op.f("ix_documents_paperless_id"), "documents", ["paperless_id"], unique=True
    )
    op.create_table(
        "duplicate_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("jaccard_similarity", sa.Float(), nullable=True),
        sa.Column("fuzzy_text_ratio", sa.Float(), nullable=True),
        sa.Column("metadata_similarity", sa.Float(), nullable=True),
        sa.Column("filename_similarity", sa.Float(), nullable=True),
        sa.Column("algorithm_version", sa.String(length=10), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed", sa.Boolean(), nullable=True),
        sa.Column("resolved", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_duplicate_groups_id"), "duplicate_groups", ["id"], unique=False
    )
    op.create_table(
        "document_content",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=True),
        sa.Column("full_text", sa.Text(), nullable=True),
        sa.Column("normalized_text", sa.Text(), nullable=True),
        sa.Column("word_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_document_content_id"), "document_content", ["id"], unique=False
    )
    op.create_table(
        "duplicate_members",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["duplicate_groups.id"],
        ),
        sa.PrimaryKeyConstraint("group_id", "document_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("duplicate_members")
    op.drop_index(op.f("ix_document_content_id"), table_name="document_content")
    op.drop_table("document_content")
    op.drop_index(op.f("ix_duplicate_groups_id"), table_name="duplicate_groups")
    op.drop_table("duplicate_groups")
    op.drop_index(op.f("ix_documents_paperless_id"), table_name="documents")
    op.drop_index(op.f("ix_documents_id"), table_name="documents")
    op.drop_index(op.f("ix_documents_fingerprint"), table_name="documents")
    op.drop_table("documents")
    op.drop_table("app_config")
    # ### end Alembic commands ###
