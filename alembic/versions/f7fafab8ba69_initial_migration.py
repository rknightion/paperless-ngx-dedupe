"""Initial migration

Revision ID: f7fafab8ba69
Revises: 
Create Date: 2025-08-17 20:40:27.476154

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f7fafab8ba69'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_config',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paperless_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('fingerprint', sa.String(length=64), nullable=True),
    sa.Column('minhash_signature', sa.LargeBinary(), nullable=True),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('ocr_confidence', sa.Float(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('last_processed', sa.DateTime(), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_fingerprint'), 'documents', ['fingerprint'], unique=True)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_paperless_id'), 'documents', ['paperless_id'], unique=True)
    op.create_table('duplicate_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('algorithm_version', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_duplicate_groups_id'), 'duplicate_groups', ['id'], unique=False)
    op.create_table('document_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('full_text', sa.Text(), nullable=True),
    sa.Column('normalized_text', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id')
    )
    op.create_index(op.f('ix_document_content_id'), 'document_content', ['id'], unique=False)
    op.create_table('duplicate_members',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['duplicate_groups.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'document_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('duplicate_members')
    op.drop_index(op.f('ix_document_content_id'), table_name='document_content')
    op.drop_table('document_content')
    op.drop_index(op.f('ix_duplicate_groups_id'), table_name='duplicate_groups')
    op.drop_table('duplicate_groups')
    op.drop_index(op.f('ix_documents_paperless_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_fingerprint'), table_name='documents')
    op.drop_table('documents')
    op.drop_table('app_config')
    # ### end Alembic commands ###
